use alienfile;
use Path::Tiny qw( path );

configure {
  requires 'Path::Tiny';
};

plugin 'Probe::CommandLine' => (
  command => 'ghostunnel',
  args    => '--version',
);

share {

  my $asset_name;

  my $cpu = meta->prop->{platform}->{cpu}->{arch}->{name};

  if($^O eq 'linux' && $cpu eq 'x86_64')
  {
    $asset_name = 'ghostunnel-linux-amd64';
  }
  elsif($^O eq 'darwin' && $cpu eq 'x86_64')
  {
    $asset_name = 'ghostunnel-darwin-amd64';
  }
  elsif($^O eq 'darwin' && $cpu eq 'aarch64')
  {
    $asset_name = 'ghostunnel-darwin-arm64';
  }
  elsif($^O eq 'MSWin32' && $cpu eq 'x86_64')
  {
    $asset_name = 'ghostunnel-windows-amd64';
  }

  plugin 'Download::GitHub' => (
    github_user => 'ghostunnel',
    github_repo => 'ghostunnel',
    asset => 1,
    $asset_name ? (asset_name  => qr/^$asset_name$/, asset_format => 'f') : (),
  );

  if($asset_name)
  {
    my $exe = "ghostunnel";
    $exe .= ".exe" if $^O eq 'MSWin32';

    my @build = (
      '%{make_path} %{.install.prefix}/bin',
      'ls -ltr',
      "%{cp} %{.install.extract}/$asset_name %{.install.prefix}/bin/$exe",
    );
    push @build, "chmod +x %{.install.prefix}/bin/$exe" unless $^O eq 'MSWin32';

    build \@build;
  }
  else
  {
  }
};
